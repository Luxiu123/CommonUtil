<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:widget="clr-namespace:CommonUtil.Widget"
                    xmlns:ui="http://schemas.modernwpf.com/2019">
  <!-- CheckBoxStyle -->
  <Style x:Key="GlobalCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource DefaultCheckBoxStyle}">
    <Setter Property="VerticalContentAlignment" Value="Center"/>
  </Style>
  <Style TargetType="CheckBox" BasedOn="{StaticResource GlobalCheckBoxStyle}"/>
  <!-- TextBlockStyle -->
  <Style x:Key="GlobalTextBlockStyle" TargetType="TextBlock">
    <Setter Property="FontSize" Value="{DynamicResource SystemFontSize}" />
    <Setter Property="FontFamily" Value="{DynamicResource SystemFontFamily}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="ToolTipService.InitialShowDelay" Value="100" />
  </Style>
  <Style TargetType="TextBlock" BasedOn="{StaticResource GlobalTextBlockStyle}"/>
  <!-- TextBoxStyle -->
  <Style x:Key="GlobalTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}">
    <Setter Property="FontSize" Value="{DynamicResource SystemFontSize}" />
    <Setter Property="FontFamily" Value="{DynamicResource SystemFontFamily}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style TargetType="TextBox" BasedOn="{StaticResource GlobalTextBoxStyle}"/>
  <!-- MenuButton 样式 -->
  <Style x:Key="MenuButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
    <Setter Property="Padding" Value="4" />
  </Style>
  <!-- IconFont 样式 -->
  <Style x:Key="IconFontStyle" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{StaticResource IconFontUrI}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="FontSize" Value="{DynamicResource SystemFontSize}" />
  </Style>
  <!-- 嵌入 Button Icon -->
  <Style x:Key="ButtonIconFontStyle" TargetType="TextBlock" BasedOn="{StaticResource IconFontStyle}">
    <Setter Property="Margin" Value="0,0,12,0"/>
    <Setter Property="Foreground" Value="{DynamicResource ApplicationForeground}"/>
  </Style>
  <!-- 菜单 TextBlock -->
  <Style x:Key="MenuTextBlockStyle" TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource Black8}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="FontSize" Value="{DynamicResource SystemFontSize}" />
    <Setter Property="FontFamily" Value="{DynamicResource SystemFontFamily}" />
  </Style>
  <!-- 嵌入 Button TextBlock -->
  <Style x:Key="ButtonTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource GlobalTextBlockStyle}">
    <Setter Property="Foreground" Value="{DynamicResource ApplicationForeground}"/>
  </Style>
  <!-- 菜单 SimpleStackPanel -->
  <Style x:Key="ContextMenuSimpleStackPanelStyle" TargetType="ui:SimpleStackPanel">
    <Setter Property="VerticalAlignment" Value="Center" />
    <!-- 不可缺少 -->
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Spacing" Value="{StaticResource ContextMenuSimpleStackPanelSpacing}" />
    <Setter Property="Orientation" Value="Horizontal" />
  </Style>
  <!-- 超链接 HyperLinkStyle -->
  <Style x:Key="HyperLinkStyle" TargetType="TextBlock" BasedOn="{StaticResource GlobalTextBlockStyle}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="TextDecorations" Value="Underline" />
        <Setter Property="Cursor" Value="Hand" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="False">
        <Setter Property="TextDecorations" Value="None" />
        <Setter Property="Cursor" Value="None" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- ContentDialogTitleStyle -->
  <Style x:Key="ContentDialogTitleStyle" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="黑体" />
    <Setter Property="FontSize" Value="20"/>
  </Style>
  <!-- BaseDialogIconStyle -->
  <Style x:Key="BaseDialogIconStyle" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{StaticResource IconFontUrI}"/>
    <Setter Property="FontSize" Value="22"/>
  </Style>
  <!-- InfoIconStyle -->
  <Style x:Key="InfoIconStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseDialogIconStyle}">
    <Setter Property="Foreground" Value="{StaticResource Black7}"/>
    <Setter Property="Text" Value="&#xe650;" />
  </Style>
  <!-- WaringIconStyle -->
  <Style x:Key="WaringIconStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseDialogIconStyle}">
    <Setter Property="Foreground" Value="{StaticResource WarningIconForeground}"/>
    <Setter Property="Text" Value="&#xe6d2;" />
  </Style>
  <!-- TransparentMenuItemStyle -->
  <Style x:Key="TransparentMenuItemStyle" TargetType="MenuItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuItem">
          <Border x:Name="bd">
            <ContentPresenter Content="{TemplateBinding Header}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
              <Setter Property="Background" TargetName="bd" Value="Transparent"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- TitleBarButtonstyle -->
  <Style x:Key="TitleBarButtonstyle" TargetType="Button">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="ContentBackgrond">
            <ContentPresenter x:Name="Content"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="ContentBackgrond" Value="{DynamicResource TitleBarHoverBackground}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter Property="TextElement.Foreground" TargetName="Content" Value="{DynamicResource TitleBarTextForeground}"/>
              <Setter Property="Background" TargetName="ContentBackgrond" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" TargetName="ContentBackgrond" Value="{DynamicResource TitleBarHoverBackgroundDraker}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- ButtonStyle -->
  <Style x:Key="GlobalButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
    <Setter Property="Padding" Value="16,8,16,8"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="Background"
                  Background="{TemplateBinding Background}"
                  CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                  SnapsToDevicePixels="True">
            <Border x:Name="Border"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}">
              <ContentPresenter x:Name="ContentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource ApplicationBackgroundDark1}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ApplicationBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource ApplicationBackground}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ApplicationBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource ApplicationBackgroundDark2}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ApplicationBackgroundDark2}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="Button" BasedOn="{StaticResource GlobalButtonStyle}"/>
  <Style x:Key="GlobalIconButtonStyle" TargetType="widget:IconButton" BasedOn="{StaticResource GlobalButtonStyle}"/>
  <Style TargetType="widget:IconButton" BasedOn="{StaticResource GlobalButtonStyle}"/>
  <!-- ErrorButtonStyle -->
  <Style x:Key="GlobalErrorButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
    <Setter Property="Padding" Value="16,8,16,8"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="Background"
                  Background="{TemplateBinding Background}"
                  CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                  SnapsToDevicePixels="True">
            <Border x:Name="Border"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}">
              <ContentPresenter x:Name="ContentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource ErrorBackgroundDark1}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ErrorBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource ErrorBackground}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ErrorBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource ErrorBackgroundDark2}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ErrorBackgroundDark2}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- SuccessButtonStyle -->
  <Style x:Key="GlobalSuccessButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
    <Setter Property="Padding" Value="16,8,16,8"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="Background"
                  Background="{TemplateBinding Background}"
                  CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                  SnapsToDevicePixels="True">
            <Border x:Name="Border"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}">
              <ContentPresenter x:Name="ContentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource SuccessBackgroundDark1}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource SuccessBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource SuccessBackground}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource SuccessBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource SuccessBackgroundDark2}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource SuccessBackgroundDark2}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- WaringButtonStyle -->
  <Style x:Key="GlobalWaringButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
    <Setter Property="Padding" Value="16,8,16,8"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="Background"
                  Background="{TemplateBinding Background}"
                  CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                  SnapsToDevicePixels="True">
            <Border x:Name="Border"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}">
              <ContentPresenter x:Name="ContentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource WaringBackgroundDark1}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource WaringBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource WaringBackground}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource WaringBackgroundDark1}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Background" Property="Background" Value="{DynamicResource WaringBackgroundDark2}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource WaringBackgroundDark2}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ApplicationForeground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- 多行文本框 -->
  <Style x:Key="MultilineTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource GlobalTextBoxStyle}">
    <Setter Property="AcceptsReturn" Value="True"/>
    <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="VerticalContentAlignment" Value="Top"/>
    <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
  </Style>
  <!-- 无边框 TextBox -->
  <Style x:Key="BorderlessTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource GlobalTextBoxStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <ScrollViewer x:Name="PART_ContentHost"
                        Background="{TemplateBinding Background}"
                        FontSize="{TemplateBinding FontSize}"
                        Style="{DynamicResource TextControlContentHostStyle}"
                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                        IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        Margin="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        IsTabStop="False"
                        Focusable="False"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>